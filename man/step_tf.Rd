% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tf.R
\name{step_tf}
\alias{step_tf}
\title{Term frequency of tokens}
\usage{
step_tf(recipe, ..., role = NA, trained = FALSE, columns = NULL,
  tf.weight = "raw count", K = 0.5, res = NULL, prefix = "tf",
  skip = FALSE)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables.
For `step_tf`, this indicates the variables to be encoded
into a list column. See [recipes::selections()] for more
details. For the `tidy` method, these are not currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the recipe has been
baked.}

\item{columns}{A list of tibble results that define the
encoding. This is `NULL` until the step is trained by
[recipes::prep.recipe()].}

\item{tf.weight}{A character determine the weighting scheme for
the term frequency calculations. Must be one of "binary", 
"raw count", "term frequency", "log normalization" or
"double normalization". Defaults to "raw count".}

\item{K}{A numeric weight used if `tf.weight` is set to
"double normalization". Defaults to 0.5.}

\item{res}{The words that will be used to calculate the term 
frequency will be stored here once this preprocessing step has 
be trained by [prep.recipe()].}

\item{prefix}{A character string that will be the prefix to the
resulting new variables. See notes below}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by [recipes::bake.recipe()]? While all
operations are baked when [recipes::prep.recipe()] is run, some
operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when
using `skip = TRUE` as it may affect the computations for
subsequent operations.}
}
\value{
An updated version of `recipe` with the new step added
 to the sequence of existing steps (if any).
}
\description{
`step_tf` creates a *specification* of a recipe step that
 will convert a list of its tokenized parts into multiple 
 variables containing the term counts.
}
\details{
The new components will have names that begin with `prefix`, then
the name of the variable, followed by the tokens all seperated by
`-`. The new variables will be created alphabetically according to
token.
}
\examples{
library(recipes)

data(okc_text)

okc_rec <- recipe(~ ., data = okc_text) \%>\%
  step_tokenize(essay0) \%>\%
  step_textfilter(essay0, max.words = 100) \%>\%
  step_tf(essay0) \%>\%
  prep(training = okc_text, retain = TRUE)
  
bake(okc_rec, okc_text)
}
\concept{preprocessing encoding}
\keyword{datagen}
